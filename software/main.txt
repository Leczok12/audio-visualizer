#include <Arduino.h>
#include <QuickButton.h>
#include "types.hpp"
#include "config.hpp"
#include "LedMatrix/LedMatrix.hpp"
#include "DataManager/DataManager.hpp"
#include "MSGEQ7/MSGEQ7.hpp"

QuickButton b1(PIN_BUTTON_1);
QuickButton b2(PIN_BUTTON_2);
QuickButton b3(PIN_BUTTON_3);

int button_mode = 0; // 0 - normal, 1 - factor adjustment
unsigned long button_mode_old_time = 0;

unsigned long render_old_time = 0;

// EEPROM
bool power = true;
int display_mode = 0;
int color_mode = 0;
int audio_factor = 10;
int brightness = 255;

Color c1({3, 252, 48});
Color c2({3, 252, 240});
Color c3({255, 255, 255});

DataManager dataManager(power, display_mode, color_mode, audio_factor, brightness, c1, c2, c3);

void onClick(int id, unsigned long duartion, int count)
{
  button_mode_old_time = millis();

  if (!power)
  {
    if (id == 1)
      power = true;
    return;
  }

  switch (id)
  {
  case 1:
    if (duartion > 1000)
    {
      button_mode = 0;
    }
    else
    {
      power = false;
    }
    break;
  case 2:
    if (duartion > 1000)
    {
      button_mode = 1;
    }
    else if (button_mode == 0)
    {
      display_mode++;
      if (display_mode > 3)
        display_mode = 0;
    }
    else if (button_mode == 1)
    {
      audio_factor += count;
      if (audio_factor > 30)
        audio_factor = 30;
    }
    else if (button_mode == 2)
    {
      brightness += count * 10;
      if (brightness > 255)
        brightness = 255;
    }
    break;
  case 3:
    if (duartion > 1000)
    {
      button_mode = 2;
    }
    else if (button_mode == 0)
    {
      color_mode++;
      if (color_mode > FADE)
        color_mode = 0;
    }
    else if (button_mode == 1)
    {
      audio_factor -= count;
      if (audio_factor < 1)
        audio_factor = 1;
    }
    else if (button_mode == 2)
    {
      brightness -= count * 10;
      if (brightness < 30)
        brightness = 30;
    }
    break;
  }

  dataManager.update();
}

void setup()
{
  b1.onClick([](unsigned long d, int c)
             { onClick(1, d, c); });
  b2.onClick([](unsigned long d, int c)
             { onClick(2, d, c); });
  b3.onClick([](unsigned long d, int c)
             { onClick(3, d, c); });

  dataManager.read();
}

void loop()
{
  MSGEQ7 msgeq7(PIN_INPUT, PIN_RESET, PIN_STROBE, 70, 7, 0);
  LedMatrix ledMatrix(PIN_LED, DELAY_TIME, brightness, c1, c2, c3);

  while (true)
  {
    b1.loop();
    b2.loop();
    b3.loop();

    if (button_mode_old_time + BUTTON_TIME < millis())
      button_mode = 0;

    if (!power)
    {
      ledMatrix.off();
    }
    else if (render_old_time + 25 < millis())
    {
      render_old_time = millis();

      AUDIO_DISPLAY_FLAG d_flag;
      switch (display_mode)
      {
      case 0:
        d_flag = NORMAL;
        break;
      case 1:
        d_flag = LINE;
        break;
      case 2:
        d_flag = DELAY;
        break;
      case 3:
        d_flag = (LINE | DELAY);
        break;
      }

      ledMatrix.render(msgeq7.read(audio_factor / 10.0), d_flag, color_mode);
      ledMatrix.show();
    }
  }
}